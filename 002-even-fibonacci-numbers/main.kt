/* -------------------
 Even fibonacci numbers
- Problem 2
----------------------

Each new term in the fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
------------------------------------------------------ */

// 1) generate a fibonacci sequence
fun getfibonacciSequence(numberOfSequences: Int): List<Int> {
  var fibonacciSequence = listOf(0, 1);
  var fibonacci: Int;
  var preceding = 1;
  var precedingLast = 0;
  
  for (i in 1..numberOfSequences) {
    // the sum of the two preceding ones generates a fibonacci number
    fibonacci = (preceding + precedingLast);
    // val status =  "ü¶∏‚Äç‚ôÇÔ∏è Fibo: $fibonacci\nùêß-¬π: $preceding\nùêß-¬≤: $precedingLast\n";
    // println(fibonacciSequence);
    // println(status);

    // if the actual fibonacci number exceeds 4 million, return the list
    if (fibonacci >= 4000000) return fibonacciSequence;

    // .. else add the generated fibonacci number into the sequence
    fibonacciSequence += fibonacci;

    // ... and move the preceding ones
    precedingLast = preceding;
    preceding = fibonacci;
  };

  // return the generated sequence
  return fibonacciSequence;
};

//2) find the even-valued terms of the fibonacci sequence
fun getEvenTerms(fibonacciSequence: List<Int>): List<Int> {
  var evenValuedTerms : List<Int> = emptyList();

  for (i in fibonacciSequence) {
    if (i%2 == 0) {
      // push the even-valued terms into a list
      evenValuedTerms += i;
    }
  }

  // return the list of even-valued terms
  return evenValuedTerms;
}

fun main(args: Array<String>) {
  // 1) generate a fibonacci sequence
  val sequence = getfibonacciSequence(100);
  println("\nüçÑ Fibonacci Sequence: \n$sequence");

  //2) find the even-valued terms of the fibonacci sequence
  val evenTerms = getEvenTerms(sequence);
  println("\nüé≠ Even Terms: \n$evenTerms");

  // 3) get the sum of the even-valued terms
  val sum = evenTerms.sum();
  println("\n‚úÖ Sum of Even Terms: \n$sum");
};